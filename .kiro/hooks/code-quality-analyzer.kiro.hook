{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements, including code smells, design patterns, and best practices. Generates suggestions for improving code quality while maintaining existing functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.tsx",
      "src/**/*.ts",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.ts",
      "*.js",
      "*.tsx",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code in the changed files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long methods, duplicate code, large classes, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to TypeScript/React best practices, proper error handling, and clean code principles\n4. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n5. **Maintainability**: Identify areas that could be refactored for easier maintenance and testing\n6. **Performance**: Suggest optimizations that could improve runtime performance without breaking functionality\n7. ** Eliminate Hallluciantion** Use  Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source and verify if any outdated / hallucinated code is generated\n\nProvide specific, actionable suggestions with code examples where helpful. Maintain the existing functionality while proposing improvements. Focus on the most impactful changes first."
  }
}